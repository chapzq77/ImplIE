TAGGER

The currently chosen tagger is the CaseInsensitiveKeywordTagger from nlptools.
We want to make building the extractor as simple as possible since this is the first iteration.
Therefore we follow the following steps in tagging the keywords.

Tagging Keyword Details:
	case insensitive
	take directly from the class term files*

*no effort to generalize through lemmatization or normalization.  This is in part
 because the class-term files are not normalized and would require a lot of processing
 to reliably generalize the terms given.


EXTRACTOR

Output should provide the entire noun phrase containing
both the class term noun phrase and the modified noun phrase.
Including the entire phrase serves two purposes:
	1. Catching cases where the modified noun phrase alone has little meaning -
		the commonly used phrase is the entire phrase.
	2. Providing context into how the class term modifies the noun phrase for any
		further processing.

	Extractor Steps
		Step 1: Chunk the sentence 
		Step 2: Tag the sentence 
		Step 3: Identify nouns modified by a tagged term 
		Step 4: Extract noun phrase

	Implementation
		Step 1: Chunk the sentence
			nlptools and the stanford parser provide reliable chunkers
			The two give slightly different results, so we need to chunk before
			the rest of the steps to avoid descrepancies in the chunking.
		
		Step 2: Tag the sentence
			Using the CaseInsensitiveKeywordTagger on the chunked sentence.
		
		Step 3: Identify nouns modified by tags 
			Use stanford parser.
			Typed dependency representation of sentence provides relations between words,
			(such as the ones we're looking for, noun-to-noun modifiers).
			Look for noun-to-noun modifiers the include one of the tagged terms.

			*Stanford parser's part of speech tagging can be used to ensure that both
			 the class term and modified phrase are noun phrases.
		
		Step 4: Extract noun phrase
			Use stanford parser's context free phrase structure to find noun phrase
			containing both the class term and modified noun phrases
